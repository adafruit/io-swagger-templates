#!/usr/bin/env node

var spawn = require('child_process').spawn,
    fs = require('fs'),
    path = require('path'),
    logo = fs.readFileSync(path.join(__dirname,'logo.txt'), 'utf8'),
    service = require('commander'),
    package = require('./package.json');

service._name = 'adafruit-io service';

function start() {

  if(require('os').platform() !== 'linux')
    return console.error('[error]   running adafruit io as a service is only supported on linux');

  process.env.AIO_PORT = service.port || 8080;
  process.stdout.write(logo);
  console.log('[status]  starting service...');

  var child = spawn('forever-service', ['install', '-s', 'index.js', '--start', 'aioserver'], {
    cwd: __dirname,
    env: process.env,
    detached: true
  });

  console.log('[status]  adafruit io is now ready at http://localhost:%d/api', process.env.AIO_PORT);
  console.log('[info]    documentation is available at http://localhost:%d/api/docs\n', process.env.AIO_PORT);

  child.on('error', console.log);

}

function stop() {

 if(require('os').platform() !== 'linux')
    return console.error('[error]   running adafruit io as a service is only supported on linux');

  var child = spawn('forever-service', ['delete', 'aioserver'], {
    cwd: __dirname,
    env: process.env,
    detached: true
  });

  console.log('stopping service...\n');

  child.on('error', console.log);

}

service.version(package.version);
service.option('-p, --port <n>', 'http port', parseInt);
service.command('start').description('installs and starts the service').action(start);
service.command('stop').description('stops and removes the service').action(stop);
service.parse(process.argv);

if (!process.argv.slice(2).length)
  service.outputHelp();

